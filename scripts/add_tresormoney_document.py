#!/usr/bin/env python3
"""
Script pour ajouter le document "Foire aux questions sur Tr√©sorMoney v4.pdf" au syst√®me.
"""

import asyncio
import sys
from pathlib import Path

# Ajouter le r√©pertoire parent au path pour importer les modules de l'app
sys.path.append(str(Path(__file__).parent.parent))

from app.core.database import get_db
from app.services.document_manager import DocumentManager
from loguru import logger


async def add_tresormoney_document():
    """Ajoute le document PDF 'Foire aux questions sur Tr√©sorMoney v4.pdf' au syst√®me."""
    
    # Chemin vers le document PDF (avec le nom exact du fichier)
    pdf_path = Path(__file__).parent.parent / "docs" / "Foire aux questions sur Tr√©sorMoney  v4.pdf"
    
    if not pdf_path.exists():
        logger.error(f"‚ùå Document PDF non trouv√©: {pdf_path}")
        return False
    
    logger.info(f"üìÑ Document trouv√©: {pdf_path}")
    logger.info(f"üìä Taille du fichier: {pdf_path.stat().st_size / 1024:.1f} KB")
    
    try:
        # Initialiser le gestionnaire de documents
        document_manager = DocumentManager()
        
        # Obtenir une session de base de donn√©es
        async for db_session in get_db():
            # V√©rifier si le document existe d√©j√†
            existing_doc = await document_manager.get_document_by_filename(
                db_session, "Foire aux questions sur Tr√©sorMoney  v4.pdf"
            )
            
            if existing_doc:
                logger.info(f"üìã Document d√©j√† pr√©sent dans la base de donn√©es:")
                logger.info(f"  - ID: {existing_doc.id}")
                logger.info(f"  - Statut: {existing_doc.status}")
                logger.info(f"  - Chunks: {existing_doc.chunk_count}")
                logger.info(f"  - Vectors: {existing_doc.vector_count}")
                
                if existing_doc.status == "PROCESSED":
                    logger.info("‚úÖ Document d√©j√† trait√© avec succ√®s")
                    return True
                else:
                    logger.info("üîÑ Document en cours de traitement ou en erreur")
                    return False
            
            # Ajouter le document
            logger.info("üì§ Ajout du document au syst√®me...")
            
            document = await document_manager.add_document(
                db_session=db_session,
                file_path=str(pdf_path),
                original_filename="Foire aux questions sur Tr√©sorMoney  v4.pdf",
                file_type="PDF",
                title="Foire aux questions sur Tr√©sorMoney v4",
                description="Document de questions-r√©ponses sur Tr√©sorMoney",
                keywords="Tr√©sorMoney, FAQ, questions, r√©ponses, paiements, services financiers"
            )
            
            logger.info(f"‚úÖ Document ajout√© avec succ√®s:")
            logger.info(f"  - ID: {document.id}")
            logger.info(f"  - Statut: {document.status}")
            logger.info(f"  - Taille: {document.file_size} bytes")
            
            # Traiter le document
            logger.info("üîÑ Traitement du document...")
            
            processor = await document_manager.get_document_processor()
            await processor.process_document(document.id, db_session)
            
            # V√©rifier le statut final
            await db_session.refresh(document)
            
            logger.info(f"‚úÖ Traitement termin√©:")
            logger.info(f"  - Statut final: {document.status}")
            logger.info(f"  - Chunks cr√©√©s: {document.chunk_count}")
            logger.info(f"  - Vectors g√©n√©r√©s: {document.vector_count}")
            
            if document.status == "PROCESSED":
                logger.info("üéâ Document trait√© avec succ√®s!")
                return True
            else:
                logger.error(f"‚ùå Erreur lors du traitement: {document.processing_error}")
                return False
        
    except Exception as e:
        logger.error(f"‚ùå Erreur lors de l'ajout du document: {str(e)}")
        import traceback
        logger.error(traceback.format_exc())
        return False


if __name__ == "__main__":
    logger.info("üöÄ D√©but de l'ajout du document Tr√©sorMoney...")
    
    success = asyncio.run(add_tresormoney_document())
    
    if success:
        logger.info("‚úÖ Document ajout√© avec succ√®s")
    else:
        logger.error("‚ùå √âchec de l'ajout du document")
        sys.exit(1) 